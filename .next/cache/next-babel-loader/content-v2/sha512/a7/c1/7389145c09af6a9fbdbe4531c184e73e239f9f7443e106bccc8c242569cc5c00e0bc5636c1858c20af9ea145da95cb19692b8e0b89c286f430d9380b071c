{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\NextJs\\\\my-second-next-app\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Meetup Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.title,\n      address: props.address,\n      image: props.image,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://odinakafocha:0DE$ca$h@odinaka.gbxje.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupsIds = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetupsIds.map(meetupsId => ({\n      params: {\n        meetupId: meetupsId._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const {\n    meetupId\n  } = context.params;\n  const client = await MongoClient.connect(\"mongodb+srv://odinakafocha:0DE$ca$h@odinaka.gbxje.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      title: meetup.title,\n      address: meetup.address,\n      image: meetup.image,\n      description: meetup.description\n    },\n    revalidate: 10\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/user/NextJs/my-second-next-app/pages/[meetupId]/index.js"],"names":["Fragment","Head","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","title","address","image","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetupsIds","find","_id","toArray","close","fallback","paths","map","meetupsId","params","meetupId","toString","getStaticProps","context","meetup","findOne","revalidate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,MAAA,OAAO,EAAED,KAAK,CAACE,OAFjB;AAGE,MAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,MAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;AAiBA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,UAAU,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAzB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,UAAU,CAACO,GAAX,CAAgBC,SAAD,KAAgB;AACpCC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,SAAS,CAACN,GAAV,CAAcS,QAAd;AAAZ;AAD4B,KAAhB,CAAf;AAFF,GAAP;AAMD,CAdM;AAeP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAM;AAAEH,IAAAA;AAAF,MAAeG,OAAO,CAACJ,MAA7B;AACA,QAAMd,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,MAAM,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEhB,QAAQ,CAACwB,QAAD;AAAf,GAA1B,CAArB;AACAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEwB,MAAM,CAACxB,KADT;AAELC,MAAAA,OAAO,EAAEuB,MAAM,CAACvB,OAFX;AAGLC,MAAAA,KAAK,EAAEsB,MAAM,CAACtB,KAHT;AAILC,MAAAA,WAAW,EAAEqB,MAAM,CAACrB;AAJf,KADF;AAOLuB,IAAAA,UAAU,EAAE;AAPP,GAAP;AASD,CAlBM;AAoBP,eAAe5B,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <Fragment>\r\n        <Head>\r\n            <title>Meetup Details</title>\r\n            <meta name=\"\"/>\r\n        </Head>\r\n      <MeetupDetail\r\n        title={props.title}\r\n        address={props.address}\r\n        image={props.image}\r\n        description={props.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://odinakafocha:0DE$ca$h@odinaka.gbxje.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetupsIds = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetupsIds.map((meetupsId) => ({\r\n      params: { meetupId: meetupsId._id.toString() },\r\n    })),\r\n  };\r\n};\r\nexport const getStaticProps = async (context) => {\r\n  const { meetupId } = context.params;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://odinakafocha:0DE$ca$h@odinaka.gbxje.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n  client.close();\r\n  return {\r\n    props: {\r\n      title: meetup.title,\r\n      address: meetup.address,\r\n      image: meetup.image,\r\n      description: meetup.description,\r\n    },\r\n    revalidate: 10,\r\n  };\r\n};\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}